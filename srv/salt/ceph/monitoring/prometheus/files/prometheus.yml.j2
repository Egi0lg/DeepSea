# Default config for Prometheus.

global:

  # Attach these labels to any time series or alerts when communicating with
  # external systems (federation, remote storage, Alertmanager).
  external_labels:
      monitor: 'ses'

rule_files:
  - /etc/prometheus/SUSE/default_rules/*.yml
  - /etc/prometheus/SUSE/custom_rules/*.yml

scrape_configs:
  # The job name is added as a label `job=<job_name>` to any timeseries scraped from this config.
  - job_name: 'ceph-mgr'
    honor_labels: true
    scrape_interval: {{ salt['pillar.get']('monitoring:prometheus:scrape_interval:ceph', '10s')|yaml }}
    file_sd_configs:
      - files: [ '/etc/prometheus/SUSE/scrape_configs/ceph/mgr_exporter.yml' ]
    {%- if salt['pillar.get']('monitoring:prometheus:relabel_config:ceph', False) %}
    relabel_configs:
      {%- for label in salt['pillar.get']('monitoring:prometheus:relabel_config:ceph', []) %}
        {%- if label.source_labels is string %}
          {%- set label_list = label.source_labels.split(',') %}
        {%- elif label.source_labels is list %}
          {%- set label_list = label.source_labels %}
        {%- endif %}
        {%- if label_list is defined %}
      - source_labels: {{ label_list }}
        regex: "{{ label.regex }}"
          {%- if label.get('target_label') %}
        target_label: "{{ label.target_label }}"
          {%- endif %}
          {%- if label.get('replacement') %}
        replacement: "{{ label.replacement }}"
          {%- endif %}
        {%- endif %}
      {%- endfor %}
    {%- endif %}
    {%- if salt['pillar.get']('monitoring:prometheus:metric_relabel_config:ceph', False) %}
    metric_relabel_configs: {{ salt['pillar.get']('monitoring:prometheus:metric_relabel_config:ceph', [])|yaml }}
      {%- for label in salt['pillar.get']('monitoring:prometheus:metric_relabel_config:ceph', []) %}
      - action: {{ label.get('action', 'replace') }}
        {%- if label.get('source_labels') %}
          {%- if label.source_labels is string %}
            {%- set label_list = label.source_labels.split(',') %}
          {%- elif label.source_labels is list %}
            {%- set label_list = label.source_labels %}
          {%- endif %}
          {%- if label_list is defined %}
        source_labels: {{ label_list }}
          {%- endif %}
        {%- endif %}
        {%- if label.get('regex') %}
        regex: "{{ label.regex }}"
        {%- endif %}
        {%- if label.get('target_label') %}
        target_label: "{{ label.target_label }}"
        {%- endif %}
        {%- if label.get('replacement') %}
        replacement: "{{ label.replacement }}"
        {%- endif %}
      {%- endfor %}
    {%- endif %}
  - job_name: 'node-exporter'
    scrape_interval: {{ salt['pillar.get']('monitoring:prometheus:scrape_interval:node_exporter', '10s')|yaml }}
    file_sd_configs:
      - files: [ '/etc/prometheus/SUSE/scrape_configs/node_exporter/*.yml' ]
    {%- if salt['pillar.get']('monitoring:prometheus:relabel_config:node_exporter', False) %}
    relabel_configs:
      {%- for label in salt['pillar.get']('monitoring:prometheus:relabel_config:node_exporter', []) %}
        {%- if label.source_labels is string %}
          {%- set label_list = label.source_labels.split(',') %}
        {%- elif label.source_labels is list %}
          {%- set label_list = label.source_labels %}
        {%- endif %}
        {%- if label_list is defined %}
      - source_labels: {{ label_list }}
        regex: "{{ label.regex }}"
          {%- if label.get('target_label') %}
        target_label: "{{ label.target_label }}"
          {%- endif %}
          {%- if label.get('replacement') %}
        replacement: "{{ label.replacement }}"
          {%- endif %}
        {%- endif %}
      {%- endfor %}
    {%- endif %}
    {%- if salt['pillar.get']('monitoring:prometheus:metric_relabel_config:node_exporter', False) %}
    metric_relabel_configs: {{ salt['pillar.get']('monitoring:prometheus:metric_relabel_config:node_exporter', [])|yaml }}
      {%- for label in salt['pillar.get']('monitoring:prometheus:metric_relabel_config:node_exporter', []) %}
      - action: {{ label.get('action', 'replace') }}
        {%- if label.get('source_labels') %}
          {%- if label.source_labels is string %}
            {%- set label_list = label.source_labels.split(',') %}
          {%- elif label.source_labels is list %}
            {%- set label_list = label.source_labels %}
          {%- endif %}
          {%- if label_list is defined %}
        source_labels: {{ label_list }}
          {%- endif %}
        {%- endif %}
        {%- if label.get('regex') %}
        regex: "{{ label.regex }}"
        {%- endif %}
        {%- if label.get('target_label') %}
        target_label: "{{ label.target_label }}"
        {%- endif %}
        {%- if label.get('replacement') %}
        replacement: "{{ label.replacement }}"
        {%- endif %}
      {%- endfor %}
    {%- endif %}
  - job_name: 'prometheus'
    scrape_interval: {{ salt['pillar.get']('monitoring:prometheus:scrape_interval:prometheus', '10s')|yaml }}
    file_sd_configs:
      - files: [ '/etc/prometheus/SUSE/scrape_configs/prometheus/*.yml' ]
    {%- if salt['pillar.get']('monitoring:prometheus:relabel_config:prometheus', False) %}
    relabel_configs:
      {%- for label in salt['pillar.get']('monitoring:prometheus:relabel_config:prometheus', []) %}
        {%- if label.source_labels is string %}
          {%- set label_list = label.source_labels.split(',') %}
        {%- elif label.source_labels is list %}
          {%- set label_list = label.source_labels %}
        {%- endif %}
        {%- if label_list is defined %}
      - source_labels: {{ label_list }}
        regex: "{{ label.regex }}"
          {%- if label.get('target_label') %}
        target_label: "{{ label.target_label }}"
          {%- endif %}
          {%- if label.get('replacement') %}
        replacement: "{{ label.replacement }}"
          {%- endif %}
        {%- endif %}
      {%- endfor %}
    {%- endif %}
    {%- if salt['pillar.get']('monitoring:prometheus:metric_relabel_config:prometheus', False) %}
    metric_relabel_configs: {{ salt['pillar.get']('monitoring:prometheus:metric_relabel_config:prometheus', [])|yaml }}
      {%- for label in salt['pillar.get']('monitoring:prometheus:metric_relabel_config:prometheus', []) %}
      - action: {{ label.get('action', 'replace') }}
        {%- if label.get('source_labels') %}
          {%- if label.source_labels is string %}
            {%- set label_list = label.source_labels.split(',') %}
          {%- elif label.source_labels is list %}
            {%- set label_list = label.source_labels %}
          {%- endif %}
          {%- if label_list is defined %}
        source_labels: {{ label_list }}
          {%- endif %}
        {%- endif %}
        {%- if label.get('regex') %}
        regex: "{{ label.regex }}"
        {%- endif %}
        {%- if label.get('target_label') %}
        target_label: "{{ label.target_label }}"
        {%- endif %}
        {%- if label.get('replacement') %}
        replacement: "{{ label.replacement }}"
        {%- endif %}
      {%- endfor %}
    {%- endif %}
  - job_name: 'grafana'
    scrape_interval: {{ salt['pillar.get']('monitoring:prometheus:scrape_interval:grafana', '10s')|yaml }}
    file_sd_configs:
      - files: [ '/etc/prometheus/SUSE/scrape_configs/grafana/*.yml' ]
    scheme: https
{% if not pillar.get('monitoring:grafana:ssl_cert', False) and not pillar.get('monitoring:grafana:ssl_key', False) %}
    tls_config:
      insecure_skip_verify: true
{% endif %}
    {%- if salt['pillar.get']('monitoring:prometheus:relabel_config:grafana', False) %}
    relabel_configs:
      {%- for label in salt['pillar.get']('monitoring:prometheus:relabel_config:grafana', []) %}
        {%- if label.source_labels is string %}
          {%- set label_list = label.source_labels.split(',') %}
        {%- elif label.source_labels is list %}
          {%- set label_list = label.source_labels %}
        {%- endif %}
        {%- if label_list is defined %}
      - source_labels: {{ label_list }}
        regex: "{{ label.regex }}"
          {%- if label.get('target_label') %}
        target_label: "{{ label.target_label }}"
          {%- endif %}
          {%- if label.get('replacement') %}
        replacement: "{{ label.replacement }}"
          {%- endif %}
        {%- endif %}
      {%- endfor %}
    {%- endif %}
    {%- if salt['pillar.get']('monitoring:prometheus:metric_relabel_config:grafana', False) %}
    metric_relabel_configs: {{ salt['pillar.get']('monitoring:prometheus:metric_relabel_config:grafana', [])|yaml }}
      {%- for label in salt['pillar.get']('monitoring:prometheus:metric_relabel_config:grafana', []) %}
      - action: {{ label.get('action', 'replace') }}
        {%- if label.get('source_labels') %}
          {%- if label.source_labels is string %}
            {%- set label_list = label.source_labels.split(',') %}
          {%- elif label.source_labels is list %}
            {%- set label_list = label.source_labels %}
          {%- endif %}
          {%- if label_list is defined %}
        source_labels: {{ label_list }}
          {%- endif %}
        {%- endif %}
        {%- if label.get('regex') %}
        regex: "{{ label.regex }}"
        {%- endif %}
        {%- if label.get('target_label') %}
        target_label: "{{ label.target_label }}"
        {%- endif %}
        {%- if label.get('replacement') %}
        replacement: "{{ label.replacement }}"
        {%- endif %}
      {%- endfor %}
    {%- endif %}

alerting:
  {%- if  salt['pillar.get']('monitoring:prometheus:alert_relabel_config', False) %}
  alert_relabel_configs:
    {%- for label in salt['pillar.get']('monitoring:prometheus:alert_relabel_config', []) %}
    - action: {{ label.get('action', 'replace') }}
      {%- if label.get('source_labels') %}
        {%- if label.source_labels is string %}
          {%- set label_list = label.source_labels.split(',') %}
        {%- elif label.source_labels is list %}
          {%- set label_list = label.source_labels %}
        {%- endif %}
        {%- if label_list is defined %}
      source_labels: {{ label_list }}
        {%- endif %}
      {%- endif %}
      {%- if label.get('regex') %}
      regex: "{{ label.regex }}"
      {%- endif %}
      {%- if label.get('target_label') %}
      target_label: "{{ label.target_label }}"
      {%- endif %}
      {%- if label.get('replacement') %}
      replacement: "{{ label.replacement }}"
      {%- endif %}
    {%- endfor %}
  {%- endif %}
  alertmanagers:
    - file_sd_configs:
        - files: [ '/etc/prometheus/SUSE/scrape_configs/alertmanager/*.yml' ]
      {%- if salt['pillar.get']('monitoring:prometheus:relabel_config:alertmanager', False) %}
      relabel_configs:
        {%- for label in salt['pillar.get']('monitoring:prometheus:relabel_config:alertmanager', []) %}
          {%- if label.source_labels is string %}
            {%- set label_list = label.source_labels.split(',') %}
          {%- elif label.source_labels is list %}
            {%- set label_list = label.source_labels %}
          {%- endif %}
          {%- if label_list is defined %}
        - source_labels: {{ label_list }}
          regex: "{{ label.regex }}"
            {%- if label.get('target_label') %}
          target_label: "{{ label.target_label }}"
            {%- endif %}
            {%- if label.get('replacement') %}
          replacement: "{{ label.replacement }}"
            {%- endif %}
          {%- endif %}
        {%- endfor %}
      {%- endif %}
